
* Trivialib.Bdd 

Functional implementation of (Ordered) Binary Decision Diagram (BDD) and Zero-suppressed Binary Decision Diagram (ZDD).



** Usage

#+BEGIN_SRC lisp

;; Knuth Chapter 4, figure 12 (and 122), rightmost ("kernel")
;; represent a set {{1,3,5},{1,4},{2,4,6},{2,5},{3,6}}
(labels ((add2 (dd1 dd2) (odd-apply dd1 dd2 (lambda (a b) (or a b))))
         (mul2 (dd1 dd2) (odd-apply dd1 dd2 (lambda (a b) (and a b))))
         (add (dd1 dd2 &rest args)
           (if args
               (apply #'add (add2 dd1 dd2) args)
               (add2 dd1 dd2)))
         (mul (dd1 dd2 &rest args)
           (if args
               (apply #'mul (mul2 dd1 dd2) args)
               (mul2 dd1 dd2)))
         (o (x) (odd (unit x)))
         (x (x) (odd (!unit x)))
         (change-many (node &rest args) (reduce #'change args :initial-value node)))
  (with-odd-context ()
    ;; 15 nodes
    (gcprint
     (add (mul (o 1) (x 2) (o 3) (x 4) (o 5) (x 6))
          (mul (o 1) (x 2) (x 3) (o 4) (x 5) (x 6))
          (mul (x 1) (o 2) (x 3) (o 4) (x 5) (o 6))
          (mul (x 1) (o 2) (x 3) (x 4) (o 5) (x 6))
          (mul (x 1) (x 2) (o 3) (x 4) (x 5) (o 6)))))
  (with-odd-context (:operation #'zdd-apply)
    ;; 8 nodes
    (gcprint
     (add (odd (change-many (leaf t) 1 3 5))
          (odd (change-many (leaf t) 1 4))
          (odd (change-many (leaf t) 2 4 6))
          (odd (change-many (leaf t) 2 5))
          (odd (change-many (leaf t) 3 6)))))
  (with-odd-context (:operation #'zdd-apply)
    ;; 8 nodes
    (gcprint
     (add (odd (make-set '(1 3 5)))
          (odd (make-set '(1 4)))
          (odd (make-set '(2 4 6)))
          (odd (make-set '(2 5)))
          (odd (make-set '(3 6))))))
  (with-odd-context (:operation #'zdd-apply)
    ;; 8 nodes
    (gcprint
     (odd (make-family '((1 3 5)
                         (1 4)
                         (2 4 6)
                         (2 5)
                         (3 6)))))))
#+END_SRC

** Dependencies

This library is at least tested on implementation listed below:

+ SBCL 1.2.8 on X86-64 Linux  3.13.0-46-generic (author's environment)

Also, it depends on the following libraries:

+ alexandria by  ::
    Alexandria is a collection of portable public domain utilities.

+ trivia by Masataro Asai ::
    NON-optimized pattern matcher compatible with OPTIMA, with extensible optimizer interface and clean codebase

+ immutabe-struct by Masataro Asai :: 

+ trivial-garbage :: For handling weak hash tables.
    
** Author

+ Masataro Asai (guicho2.71828@gmail.com)

* Copyright

Copyright (c) 2015 Masataro Asai (guicho2.71828@gmail.com)


* License

Licensed under the LLGPL License.



